
@{
    ViewBag.Title = "New Rental Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Rental Form</h2>

<form>
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"> </ul>
        </div>
    </div>

    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    <script>
        $(document).ready(function () {

            let viewModel = {
                movieIds: []
            };

            let customersSource = setupBloodHound('/api/customers?query=%QUERY', '%QUERY', 'name');

            setupTypeAhead('#customer', 'customers', 'name', customersSource, function (event, customer) {
                viewModel.customerId = customer.id;
            });

            let moviesSource = setupBloodHound('/api/movies?query=%QUERY', '%QUERY', 'name');

            setupTypeAhead('#movie', 'movies', 'name', moviesSource, function (event, movie) {
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                $("#movie").typeahead("val", ""); //clear text field after selection
                viewModel.movieIds.push(movie.id);
            });

            function setupBloodHound(url, wildCard, datumTokenizer) {
                return new Bloodhound({
                    datumTokenizer: Bloodhound.tokenizers.obj.whitespace(datumTokenizer),
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: url,
                        wildcard: wildCard
                    }
                });
            }

            function setupTypeAhead(inputSelector, name, display, source, onTypeAheadCallBack) {
                $(inputSelector).typeahead({
                    minLength: 3,
                    highlight: true
                }, {
                    name: name,
                    display: display,
                    source: source
                }).on("typeahead:select", onTypeAheadCallBack);
            }
        });
    </script>
}
